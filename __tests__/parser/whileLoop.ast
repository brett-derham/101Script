Program {
  body:
   Block {
     statements:
      [ VariableDeclaration {
          kind: 'let',
          id: 'x',
          initializer: NumericLiteral { value: 0 } },
        WhileStatement {
          test:
           BinaryExpression {
             op: '<',
             left: IdentifierExpression { referent: 'x' },
             right: NumericLiteral { value: 5 } },
          body:
           Block {
             statements:
              [ CallStatement {
                  call:
                   Call {
                     callee: IdentifierExpression { referent: 'doStuff' },
                     args:
                      [ Argument { id: null, expression: IdentifierExpression { referent: 'x' } } ] } } ] } } ] } }